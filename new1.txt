！1.开始准备工作
mkdir 例子        # 创建一个repository（仓库、版本库）,其实目前只是一个名为“例子”的文件夹，在github的文件夹中能看见
cd 例子         # 指向（打开到）当前文件
pwd           # 展示文件路径

git init      # 命令把这个目录变成Git可以管理的仓库


！2.创建并上传文件
先创建一个文件“readme”并保存到“例子”目录下（子目录也行）
git add readme.文件后缀名（如.txt）             # 把文件添加到仓库
... 可以多次添加不同文件
git commit -m '最好是注释，提醒内容等'           # 把文件提交到仓库，相当于确定之前的添加文件的操作


！3.继续上次工作
git status     # 可以让我们时刻掌握仓库当前的状态
git diff       # 查看具体变化
每次修改完要养成add + commit 的保存好习惯，最后可用status查看确认

git log            # 显示从最近到最远的提交日志,如果信息太多，可加上 --pretty=oneline
                   # 看到的一大串类似3628164...882e1e0的是commit id（版本号）
				   # Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，
				     也就是最新的提交3628164...882e1e0（注意我的提交ID和你的肯定不一样），
				     上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。


！4.退回版本
git reset --hard HEAD^        # 这里是退回到上一个版本，执行完就能看到文件已被更改
git reset --hard 3628164        # 这里是跳到指定的某个版本（ID为3628164的），可以是未来的或是过去的？

如果ID丢失（关了shell窗口），可以用：
git reflog      # 查看每次版本变化并显示ID



